{"version":3,"file":"beadnet.standalone.min.js","sources":["../src/namegenerator.js","../node_modules/loglevel/lib/loglevel.js","../src/logger.js","../src/options.js","../src/beadnet.js"],"sourcesContent":["let names = [\"Lester\",\"Margot\",\"Abdul\",\"Avery\",\"Clara\",\"Ewald\",\"Kendall\", \"Leda\",\"Dawn\",\"Quinn\",\"Dane\",\"Buster\",\"Carlee\",\"Maud\",\"Jacey\",\"Samara\", \"Alene\",\"Kaylin\",\"Hubert\",\"Al\",\"Franco\",\"Mervin\",\"Neha\",\"Kole\",\"Candida\",\"Enoch\", \"Pansy\",\"Ryder\",\"Mabel\",\"Tavares\",\"Landen\",\"Bryon\", \"Dayne\",\"Derek\",\"Kyla\",\"Estevan\",\"Orval\",\"Violette\",\"Daija\", \"Stella\",\"Zelma\",\"Robyn\",\"Colby\",\"Joyce\",\"Cruz\",\"Pedro\",\"Leanna\", \"Emanuel\",\"Hans\",\"Randal\",\"Ivy\",\"Marco\", \"Abbey\",\"Shea\",\"Ethan\",\"Novella\",\"Abel\",\"Kale\",\"Irma\",\"Esther\",\"Ransom\",\"Glennie\", \"Edmund\",\"Aric\",\"Aiyana\",\"Trenton\",\"Dana\",\"Wade\",\"Tyrell\",\"Timmy\",\"Dudley\",\"Macy\", \"Marilie\",\"Kaley\",\"Gayle\",\"Eda\",\"Max\",\"Kaitlyn\",\"Josie\",\"Lea\",\"Nico\",\"Marc\"];\n\nfunction getName(options) {\n\treturn names[Math.floor(Math.random()*names.length)];\n}\n\nexport default getName","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","import log from 'loglevel';\n\nlog.enableAll();\nlog.setLevel(\"TRACE\");\n\nexport default log;","const defaultOptions = {\n\t\t\t\n\tcolorScheme: d3.scaleOrdinal(d3.schemeCategory10),\n\n\tcontainer: {\n\t\tselector: '#beadnet',\n\t\tbackgroundColor: '#FFF'\n\t},\n\n\tnodes: {\n\t\tradius: 30,\n\t\tcolor: null,\n\t\tstrokeWidth: 3,\n\t\tstrokeColor: null,\n\t},\n\n\tchannels: {\n\t\tcolor: 'lightgray',\n\t\tstrokeWidth: 3,\n\t\tstrokeColor: null,\n\t}\n};\n\n/** \n * Merge default option with user given options \n * To make a parameter required set it to \"undefined\" in the defaults. \n */\nfunction extendDefaultOptions(options) {\n\tlet opt = {};\n\tObject.assign(opt, defaultOptions, options);\n\t\n\topt.nodes.color = opt.nodes.color || opt.colorScheme(0);\n\topt.nodes.strokeColor = opt.nodes.strokeColor || opt.container.backgroundColor;\n\t\n\treturn opt;\n}\n\nexport default extendDefaultOptions;\n","import getName from './namegenerator.js';\nimport log from './logger.js';\nimport extendDefaultOptions from './options.js';\n\n/**\n * TODO:\n */\nclass Beadnet {\n\n\t/**\n\t * Create a new BeadNet chart.\n\t * @param {Object} options \n\t */\n\tconstructor(options) {\n\t\tthis._opt = extendDefaultOptions(options);\n\t\tlog.debug(\"initializing beadnet with options: \", this._opt);\n\n\t\t/* find the parent container DOM element and insert an SVG */\n\t\tthis.container = document.querySelector(this._opt.container.selector);\n\t\tthis.svg = d3.select(this.container)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"class\", \"beadnet\");\n\t\t\n\t\tthis.updateSVGSize();\n\n\t\t/* create svg root element called with class \"chart\" and initial  */\n\t\tthis.chart = this.svg.append(\"g\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"transform\", \"translate(0,0) scale(1)\");\n\n\t\t/* create a SVG-container-element for all nodes and all channels */\n\t\tthis.channelContainer = this.chart.append(\"g\").attr(\"class\", \"channels\");\n\t\tthis.nodeContainer = this.chart.append(\"g\").attr(\"class\", \"nodes\");\n\t\t\n\t\tthis._nodes = [];\n\t\tthis._channels = [];\n\n\t\tthis.simulation = this._createSimulation();\n\t\t\n\t\tthis.updateSimulationCenter();\n\n\t\tthis.behaviors = this.createBehaviors();\n\t\tthis.svg.call(this.behaviors.zoom);\n\n\t\tthis._updateNodes();\n\t\t\n\t\twindow.addEventListener(\"resize\", this.onResize.bind(this));\n\t}\n\n\t/**\n\t * @returns {d3.forceSimulation} simulation\n\t * @private\n\t */\n\t_createSimulation() {\n\t\t// return d3.forceSimulation()\n\t\t\t//.nodes(this._nodes)\n\t\t\t// .alphaDecay(0.1)\n\t\t\t// .force(\"x\", d3.forceX().strength(0))\n\t\t\t// .force(\"y\", d3.forceY().strength(1))\n\t\t\t// .force(\"charge\", d3.forceManyBody().strength(-1000).distanceMin(this.forceDistance).distanceMax(3*this.forceDistance))\n\t\t\t// .force(\"collide\", d3.forceCollide(this.forceDistance/6))\n\t\t\t// .force(\"link\", d3.forceLink(this._channels).distance(this.forceDistance))\n\t\t\t// .force(\"center\", d3.forceCenter(this.width / 2, this.height / 2))\n\t\t\t// .alphaTarget(0)\n\t\t\t// .on(\"tick\", this._ticked.bind(this));\n\n\t\treturn d3.forceSimulation(this._nodes)\n\t\t\t.force(\"charge\", d3.forceManyBody().strength(-5000))\n\t\t\t.force(\"link\", d3.forceLink(this._channels).strength(0.1).distance(this.forceDistance))\n\t\t\t.force(\"x\", d3.forceX())\n\t\t\t.force(\"y\", d3.forceY())\n\t\t\t.alphaTarget(0.1)\n\t\t\t.on(\"tick\", this._ticked.bind(this));\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tupdateSVGSize() {\n\t\tthis.width = +this.container.clientWidth;\n\t\tthis.height = +this.container.clientHeight;\n\t\tthis.forceDistance = (this.width + this.height)*.1;\n\t\tthis.svg\n\t\t\t.attr(\"width\", this.width)\n\t\t\t.attr(\"height\", this.height);\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tonResize() {\n\t\tthis.updateSVGSize();\n\t\tthis.updateSimulationCenter();\n\t\tthis.createBehaviors();\n\t}\n\t\n\t/**\n\t * \n\t */\n\tcreateBehaviors() {\n\t\treturn {\n\n\t\t\tzoom: d3.zoom()\n\t\t\t\t.scaleExtent([0.1, 5, 4])\n\t\t\t\t.on('zoom', () => this.chart.attr('transform', d3.event.transform)),\n\n\t\t\tdrag: d3.drag()\n\t\t\t\t.on(\"start\", this._onDragStart.bind(this))\n\t\t\t\t.on(\"drag\", this._onDragged.bind(this))\n\t\t\t\t.on(\"end\", this._onDragendEnd.bind(this))\n\t\t}\n\t}\n\n\tupdateSimulationCenter() {\n\t\tconst centerX = this.svg.attr('width') / 2;\n\t\tconst centerY = this.svg.attr('height') / 2;\n\t\tthis.simulation\n\t\t\t.force(\"center\", d3.forceCenter(centerX, centerY))\n\t\t\t.restart();\n\t}\n\n\t/**\n\t * Update DOM elements after this._nodes has been updated.\n\t * This creates the SVG repensentation of a node.\n\t * \n\t * @private\n\t */\n\t_updateNodes() {\n\t\tthis.nodeElements = this.nodeContainer\n\t\t\t.selectAll(\".node\")\n\t\t\t.data(this._nodes, (data) => data.id);\n\n\t\tthis.nodeElements.exit()\n\t\t\t.remove();\n\n\t\tvar nodeParent = this.nodeElements.enter()\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"node\")\n\t\t\t\t.attr(\"id\", (data) => data.id)\n\t\t\t\t.attr(\"balance\", (data) => data.balance)\n\t\t\t\t.style(\"stroke\", this._opt.nodes.strokeColor)\n\t\t\t\t.style(\"stroke-width\", this._opt.nodes.strokeWidth);\n\n\t\tnodeParent.append(\"circle\")\n\t\t\t\t.attr(\"r\",  this._opt.nodes.radius)\n\t\t\t\t.attr(\"fill\", function(data) { return data.color; })\n\t\t\t\t.style(\"cursor\", \"pointer\");\n\n\t\tnodeParent.append(\"text\")\n\t\t\t.style(\"stroke-width\", 0.5)\n\t\t\t.attr(\"stroke\", this._opt.nodes.strokeColor)\n\t\t\t.attr(\"fill\", this._opt.nodes.strokeColor)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", \"15px\")\n\t\t\t.attr(\"y\", \"5px\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"pointer-events\", \"none\")\n\t\t\t.text((d) => d.balance || d.id);\n\n\t\tnodeParent.append(\"title\")\n\t\t\t.text(function(d) { return d.id; });\n\t\t\n\t\tnodeParent\n\t\t\t.call(this.behaviors.drag);\n\n\t\tthis.simulation\n\t\t\t.nodes(this._nodes)\n\t\t\t.alpha(1)\n\t\t\t.restart();\n\n\t\tthis.nodeElements = this.nodeContainer\n\t\t\t.selectAll(\".node\")\n\n\t\treturn this.nodeElements;\n\t}\n\n\t/**\n\t * Adds a new node to the network.\n\t * \n\t * @param {Node} node \n\t * @returns {BeatNet}\n\t */\n\taddNode(node) {\n\t\tnode = node || {};\n\n\t\t/* initialize with default values */\n\t\tnode.id = node.id || getName();\n\t\tnode.channelCount = 0;\n\t\tnode.color = node.color || this._opt.colorScheme(this._nodes.length % 10);\n\n\t\t/* save to nodes array */\n\t\tthis._nodes.push(node);\n\t\tthis._updateNodes();\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds multible new nodes to the network.\n\t * \n\t * @param {Array<Node>} nodes\n\t * @returns {BeatNet}\n\t */\n\taddNodes(nodes) {\n\t\tnodes.forEach((node) => this.addNode(node));\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes a the node with the given id from the network.\n\t * \n\t * @param {String} nodeId \n\t * @returns {BeatNet}\n\t */\n\tremoveNode(nodeId) {\n\t\tthis._nodes = this._nodes.filter(node => node.id != nodeId);\n\t\tthis._updateNodes();\t\n\t\t\n\t\treturn this;\n\t};\n\n\t/**\n\t * Create new nodes with random names.\n\t * @param {Integer} [count=1] - how many nodes.\n\t * @returns {Node}\n\t */\n\tcreateRandomNodes(count) {\n\t\tif ((typeof count !== \"undefined\" && typeof count !== \"number\") || count < 0) {\n\t\t\tthrow new TypeError('parameter count must be a positive number');\n\t\t}\n\t\treturn Array.from(new Array(count), (x) => {\n\t\t\tid: getName()\n\t\t});\n\t}\n\n\t/**\n\t * TODO: getRandomNode\n\t * @returns {Node}\n\t */\n\tgetRandomNode() {\n\t\treturn this._nodes[Math.floor(Math.random() * this._nodes.length)];\n\t}\n\n\t/**\n\t * TODO:\n\t * @private\n\t * @returns {d3.selection} this._channelElements\n\t */\n\t_updateChannels() {\n\t\tthis._channelElements = this.channelContainer.selectAll(\".channel\").data(this._channels);\n\n\t\t/* remove channels that no longer exist */\n\t\tthis._channelElements.exit().remove()\n\n\t\t/* create new svg elements for new channels */\n\t\tthis._channelElements.enter()\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"channel\")\n\t\t\t\t.attr(\"source-balance\", (d) => d.sourceBalance)\n\t\t\t\t.attr(\"target-balance\", (d) => d.targetBalance)\n\t\t\t\t.attr(\"source-id\", (d) => d.source.id)\n\t\t\t\t.attr(\"target-id\", (d) => d.target.id)\n\t\t\t.append(\"path\")\n\t\t\t\t.style(\"stroke-width\", this._opt.channels.strokeWidth)\n\t\t\t\t.style(\"stroke\", this._opt.channels.color)\n\t\t\t\t.style(\"fill\", \"none\");\n\t\t\n\t\t/* update this.paths; needed in this._ticked */\n\t\tthis.paths = this.channelContainer.selectAll(\".channel path\");\n\n\t\treturn this._channelElements;\n\t}\n\n\t/**\n\t * TODO: addChannel\n\t * @param {Channel} channel \n\t */\n\taddChannel(channel) {\n\t\tvar nodeById = d3.map(this._nodes, function(d) { return d.id; });\n\t\tvar source = nodeById.get(channel.source);\n\t\tvar target = nodeById.get(channel.target);\n\t\tthis._channels.push({\n\t\t\tsource: source, \n\t\t\ttarget: target,\n\t\t\tsourceBalance: channel.sourceBalance,\n\t\t\ttargetBalance: channel.targetBalance\n\t\t});\n\n\t\tsource.channelCount = source.channelCount + 1;\n\t\ttarget.channelCount = target.channelCount + 1;\n\n\t\tthis._updateChannels();\n\n\t\tthis.simulation.force(\"link\").links(this._channels)\n\t\t\n\t\tthis.simulation.alpha(1).restart();\n\t}\n\n\t/**\n\t * TODO: \n\t * @param {*} channels \n\t * @returns TODO:\n\t */\n\taddChannels(channels) {\n\t\tchannels.forEach((channel) => this.addChannel(channel));\n\t}\n\n\t/**\n\t * TODO: \n\t * @returns TODO:\n\t */\n\tcreateRandomChannel() {\n\t\tvar source = this.getRandomNode();\n\t\tvar target = this.getRandomNode();\n\t\t//TODO: check is this nodes already have channels. If so try to choose others.\n\t\t\n\t\treturn {\n\t\t\tsource: source.id, \n\t\t\ttarget: target.id,\n\t\t\tsourceBalance: Math.floor(Math.random()*10),\n\t\t\ttargetBalance: Math.floor(Math.random()*10)\n\t\t};\n\t}\n\n\t/**\n\t* TODO:\n\t*/\n\tgetRandomChannel() {\n\t\treturn this._channels[Math.floor(Math.random() * this._channels.length)];\n\t}\n\n\t/**\n\t * TODO: \n\t * @returns TODO:\n\t */\n\tremoveChannel(source, target) {\n\t\tthis._channels = this._channels.filter((channel) => (channel.source !== source && channel.target !== target));\n\t\tthis._updateChannels();\t\n\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_ticked() {\n\t\tif (this.nodeElements) {\n\t\t\tthis.nodeElements.attr(\"transform\", (data) => `translate(${data.x},${data.y})`);\n\t\t}\n\t\tif (this.paths) {\n\t\t\tthis.paths.attr(\"d\", (d) => {\n\t\t\t\tvar count = this._channels.filter((c) => ((d.source.id === d.source.id) && (d.target.id === d.target.id))).length;\n\t\t\t\t//console.log(count);\n\n\t\t\t\tif (count <= 1) {\n\t\t\t\t\treturn `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`;\n\t\t\t\t} else {\n\t\t\t\t\tvar dx = d.target.x - d.source.x;\n\t\t\t\t\tvar dy = d.target.y - d.source.y;\n\t\t\t\t\tvar dr = Math.sqrt((dx*dx+count) + (dy*dy+count));\n\t\t\t\t\treturn `M${d.source.x},${d.source.y}A${dr},${dr} 0 0,1 ${d.target.x},${d.target.y}`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t//_tickedBeads();\n\t}\n\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragStart(d) {\n\t\tif (!d3.event.active) {\n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0.1)\n\t\t\t\t.restart();\n\t\t}\n\t\td.fx = d.x;\n\t\td.fy = d.y;\n\t}\n\t\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragged(d) {\n\t\td.fx = d3.event.x; \n\t\td.fy = d3.event.y;\n\t}\n\t\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragendEnd(d) {\n\t\tif (!d3.event.active) { \n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0);\n\t\t}\n\t\td.fx = null;\n\t\td.fy = null;\n\t}\n}\n\nexport default Beadnet;"],"names":["names","root","definition","this","noop","undefinedType","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","replaceLoggingMethods","level","loggerName","i","length","methodFactory","log","debug","defaultMethodFactory","console","undefined","Logger","name","defaultLevel","factory","currentLevel","self","storageKey","getPersistedLevel","storedLevel","window","localStorage","ignore","cookie","document","location","indexOf","encodeURIComponent","exec","slice","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","toUpperCase","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","module","exports","defaultOptions","d3","scaleOrdinal","schemeCategory10","options","opt","_opt","assign","nodes","color","colorScheme","strokeColor","container","backgroundColor","querySelector","selector","svg","select","append","attr","updateSVGSize","chart","channelContainer","nodeContainer","_nodes","_channels","simulation","_createSimulation","updateSimulationCenter","behaviors","createBehaviors","zoom","_updateNodes","addEventListener","onResize","forceSimulation","force","forceManyBody","strength","forceLink","distance","forceDistance","forceX","forceY","alphaTarget","on","_ticked","width","clientWidth","height","clientHeight","scaleExtent","_this","event","transform","drag","_onDragStart","_onDragged","_onDragendEnd","centerX","centerY","forceCenter","restart","nodeElements","selectAll","data","id","exit","remove","nodeParent","enter","balance","style","strokeWidth","radius","text","d","alpha","node","Math","floor","random","channelCount","push","forEach","_this2","addNode","nodeId","filter","count","Array","from","x","_channelElements","sourceBalance","targetBalance","source","target","channels","paths","channel","nodeById","map","get","_updateChannels","links","_this3","addChannel","getRandomNode","y","_this4","c","dx","dy","dr","sqrt","active","fx","fy"],"mappings":"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"}