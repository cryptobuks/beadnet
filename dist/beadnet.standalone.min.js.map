{"version":3,"file":"beadnet.standalone.min.js","sources":["../src/namegenerator.js","../node_modules/loglevel/lib/loglevel.js","../src/logger.js","../src/options.js","../src/beadnet.js","../src/errors.js"],"sourcesContent":["let names = [\"Lester\",\"Margot\",\"Abdul\",\"Avery\",\"Clara\",\"Ewald\",\"Kendall\", \"Leda\",\"Dawn\",\"Quinn\",\"Dane\",\"Buster\",\"Carlee\",\"Maud\",\"Jacey\",\"Samara\", \"Alene\",\"Kaylin\",\"Hubert\",\"Al\",\"Franco\",\"Mervin\",\"Neha\",\"Kole\",\"Candida\",\"Enoch\", \"Pansy\",\"Ryder\",\"Mabel\",\"Tavares\",\"Landen\",\"Bryon\", \"Dayne\",\"Derek\",\"Kyla\",\"Estevan\",\"Orval\",\"Violette\",\"Daija\", \"Stella\",\"Zelma\",\"Robyn\",\"Colby\",\"Joyce\",\"Cruz\",\"Pedro\",\"Leanna\", \"Emanuel\",\"Hans\",\"Randal\",\"Ivy\",\"Marco\", \"Abbey\",\"Shea\",\"Ethan\",\"Novella\",\"Abel\",\"Kale\",\"Irma\",\"Esther\",\"Ransom\",\"Glennie\", \"Edmund\",\"Aric\",\"Aiyana\",\"Trenton\",\"Dana\",\"Wade\",\"Tyrell\",\"Timmy\",\"Dudley\",\"Macy\", \"Marilie\",\"Kaley\",\"Gayle\",\"Eda\",\"Max\",\"Kaitlyn\",\"Josie\",\"Lea\",\"Nico\",\"Marc\"];\n\nfunction getName() {\n\treturn names[Math.floor(Math.random()*names.length)];\n}\n\nexport default getName","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","import log from 'loglevel';\n\nlog.enableAll();\nlog.setLevel(\"TRACE\");\n\nexport default log;","const defaultOptions = {\n\t\t\t\n\tcolorScheme: d3.scaleOrdinal(d3.schemeCategory10),\n\n\tdebug: false,\n\n\tcontainer: {\n\t\tselector: '#beadnet',\n\t\tbackgroundColor: '#FFF'\n\t},\n\n\tnodes: {\n\t\tradius: 30,\n\t\tcolor: null,\n\t\tstrokeWidth: 3,\n\t\tstrokeColor: null,\n\n\t\t/* ['id', 'balance'] */\n\t\ttext: 'id'\n\t},\n\n\tchannels: {\n\t\tcolor: 'gray',\n\t\tstrokeWidth: 6,\n\t\tstrokeColor: null,\n\t},\n\n\tbeads: {\n\t\tradius: 10,\n\t\tspacing: 0,\n\t\tstrokeWidth: 2,\n\t\tstrokeColor: null,\n\n\t\tshowIndex: null\n\t}\n};\n\n/** \n * Merge default option with user given options \n * To make a parameter required set it to \"undefined\" in the defaults. \n */\nfunction extendDefaultOptions(options) {\n\tlet opt = {};\n\tObject.assign(opt, defaultOptions, options);\n\t\n\topt.nodes.color = opt.nodes.color || opt.colorScheme(0);\n\topt.nodes.strokeColor = opt.nodes.strokeColor || opt.container.backgroundColor;\n\n\topt.beads.color = opt.beads.color || opt.colorScheme(10);\n\topt.beads.strokeColor = opt.beads.strokeColor || opt.container.backgroundColor;\n\topt.beads.animation = opt.beads.animation || d3.easeExp;\n\t\n\topt.beads.distance = 2 * opt.beads.radius + opt.beads.spacing;\n\topt.beads.firstPosition = \topt.nodes.radius + opt.beads.radius + opt.beads.spacing;\n\topt.beads.showIndex = opt.beads.showIndex === null ? opt.debug : opt.beads.showIndex;\n\t\n\treturn opt;\n}\n\nexport default extendDefaultOptions;\n","import getName from './namegenerator.js';\nimport log from './logger.js';\nimport extendDefaultOptions from './options.js';\n\nimport { InsufficientBalanceError } from './errors.js';\n\nconst getRandomNumber = function(max) {\n\treturn Math.floor(Math.random() * max);\n}\n\n/**\n * TODO:\n */\nclass Beadnet {\n\n\t/**\n\t * Create a new BeadNet chart.\n\t * @param {Object} options \n\t */\n\tconstructor(options) {\n\t\tthis._opt = extendDefaultOptions(options);\n\t\tlog.debug(\"initializing beadnet with options: \", this._opt);\n\n\t\t/* find the parent container DOM element and insert an SVG */\n\t\tthis.container = document.querySelector(this._opt.container.selector);\n\t\tthis.svg = d3.select(this.container)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"class\", \"beadnet\");\n\t\t\n\t\tthis.updateSVGSize();\n\n\t\t/* create svg root element called with class \"chart\" and initial  */\n\t\tthis.chart = this.svg.append(\"g\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"transform\", \"translate(0,0) scale(1)\");\n\n\t\t/* create a SVG-container-element for all nodes and all channels */\n\t\tthis.channelContainer = this.chart.append(\"g\").attr(\"class\", \"channels\");\n\t\tthis.nodeContainer = this.chart.append(\"g\").attr(\"class\", \"nodes\");\n\t\t\n\t\tthis._nodes = [];\n\t\tthis._channels = [];\n\t\tthis.beadElements = [];\n\n\t\tthis.simulation = this._createSimulation();\n\t\t\n\t\tthis.updateSimulationCenter();\n\n\t\tthis.behaviors = this.createBehaviors();\n\t\tthis.svg.call(this.behaviors.zoom);\n\n\t\tthis._updateNodes();\n\t\t\n\t\twindow.addEventListener(\"resize\", this.onResize.bind(this));\n\t}\n\n\t/**\n\t * Return the node element with the given id.\n\t * @param {String} id - the id of the node to find.\n\t * @returns {Node|undefinded}\n\t */\n\t_getNodeById(id) {\n\t\treturn d3.map(this._nodes, (d) => { return d.id; }).get(id);\n\t}\n\n\t/**\n\t * @returns {d3.forceSimulation} simulation\n\t * @private\n\t */\n\t_createSimulation() {\n\t\t// return d3.forceSimulation()\n\t\t\t//.nodes(this._nodes)\n\t\t\t// .alphaDecay(0.1)\n\t\t\t// .force(\"x\", d3.forceX().strength(0))\n\t\t\t// .force(\"y\", d3.forceY().strength(1))\n\t\t\t// .force(\"charge\", d3.forceManyBody().strength(-1000).distanceMin(this.forceDistance).distanceMax(3*this.forceDistance))\n\t\t\t// .force(\"collide\", d3.forceCollide(this.forceDistance/6))\n\t\t\t// .force(\"link\", d3.forceLink(this._channels).distance(this.forceDistance))\n\t\t\t// .force(\"center\", d3.forceCenter(this.width / 2, this.height / 2))\n\t\t\t// .alphaTarget(0)\n\t\t\t// .on(\"tick\", this._ticked.bind(this));\n\n\t\treturn d3.forceSimulation(this._nodes)\n\t\t\t.force(\"charge\", d3.forceManyBody().strength(-5000))\n\t\t\t.force(\"link\", d3.forceLink(this._channels).strength(0.01).distance(this.forceDistance))\n\t\t\t.force(\"x\", d3.forceX())\n\t\t\t.force(\"y\", d3.forceY())\n\t\t\t.alphaTarget(0)\n\t\t\t.on(\"tick\", this._ticked.bind(this));\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tupdateSVGSize() {\n\t\tthis.width = +this.container.clientWidth;\n\t\tthis.height = +this.container.clientHeight;\n\t\tthis.forceDistance = (this.width + this.height)*.1;\n\t\tthis.svg\n\t\t\t.attr(\"width\", this.width)\n\t\t\t.attr(\"height\", this.height);\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tonResize() {\n\t\tthis.updateSVGSize();\n\t\tthis.updateSimulationCenter();\n\t\tthis.createBehaviors();\n\t}\n\t\n\t/**\n\t * \n\t */\n\tcreateBehaviors() {\n\t\treturn {\n\n\t\t\tzoom: d3.zoom()\n\t\t\t\t.scaleExtent([0.1, 5, 4])\n\t\t\t\t.on('zoom', () => this.chart.attr('transform', d3.event.transform)),\n\n\t\t\tdrag: d3.drag()\n\t\t\t\t.on(\"start\", this._onDragStart.bind(this))\n\t\t\t\t.on(\"drag\", this._onDragged.bind(this))\n\t\t\t\t.on(\"end\", this._onDragendEnd.bind(this))\n\t\t}\n\t}\n\n\tupdateSimulationCenter() {\n\t\tconst centerX = this.svg.attr('width') / 2;\n\t\tconst centerY = this.svg.attr('height') / 2;\n\t\tthis.simulation\n\t\t\t.force(\"center\", d3.forceCenter(centerX, centerY))\n\t\t\t.restart();\n\t}\n\n\t/**\n\t * Update DOM elements after this._nodes has been updated.\n\t * This creates the SVG repensentation of a node.\n\t * \n\t * @private\n\t */\n\t_updateNodes() {\n\t\tthis._nodeElements = this.nodeContainer\n\t\t\t.selectAll(\".node\")\n\t\t\t.data(this._nodes, (data) => data.id);\n\n\t\tthis._nodeElements.exit()\n\t\t\t.remove();\n\n\t\tvar nodeParent = this._nodeElements.enter()\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"node\")\n\t\t\t\t.attr(\"id\", (data) => data.id)\n\t\t\t\t.attr(\"balance\", (data) => data.balance)\n\t\t\t\t.style(\"stroke\", this._opt.nodes.strokeColor)\n\t\t\t\t.style(\"stroke-width\", this._opt.nodes.strokeWidth);\n\n\t\tnodeParent.append(\"circle\")\n\t\t\t\t.attr(\"r\",  this._opt.nodes.radius)\n\t\t\t\t.attr(\"fill\", function(data) { return data.color; })\n\t\t\t\t.style(\"cursor\", \"pointer\");\n\n\t\tnodeParent.append(\"text\")\n\t\t\t.style(\"stroke-width\", 0.5)\n\t\t\t.attr(\"stroke\", this._opt.nodes.strokeColor)\n\t\t\t.attr(\"fill\", this._opt.nodes.strokeColor)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", \"15px\")\n\t\t\t.attr(\"y\", \"5px\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"pointer-events\", \"none\")\n\t\t\t.text((d) => d[this._opt.nodes.text]);\n\n\t\tnodeParent.append(\"title\")\n\t\t\t.text((d) => d.id);\n\t\t\n\t\tnodeParent\n\t\t\t.call(this.behaviors.drag);\n\n\t\tthis.simulation\n\t\t\t.nodes(this._nodes)\n\t\t\t.alpha(1)\n\t\t\t.restart();\n\n\t\tthis._nodeElements = this.nodeContainer\n\t\t\t.selectAll(\".node\")\n\n\t\treturn this._nodeElements;\n\t}\n\n\t/**\n\t * Adds a new node to the network.\n\t * \n\t * @param {Node} node \n\t * @returns {BeatNet}\n\t */\n\taddNode(node) {\n\t\tnode = node || {};\n\n\t\t/* initialize with default values */\n\t\tnode.id = node.id || getName();\n\t\tnode.channelCount = 0;\n\t\tnode.color = node.color || this._opt.colorScheme(this._nodes.length % 10);\n\n\t\t/* save to nodes array */\n\t\tthis._nodes.push(node);\n\t\tthis._updateNodes();\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds multible new nodes to the network.\n\t * \n\t * @param {Array<Node>} nodes\n\t * @returns {BeatNet}\n\t */\n\taddNodes(nodes) {\n\t\tnodes.forEach((node) => this.addNode(node));\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes a the node with the given id from the network.\n\t * \n\t * @param {String} nodeId \n\t * @returns {BeatNet}\n\t */\n\tremoveNode(nodeId) {\n\t\tthis._nodes = this._nodes.filter(node => node.id != nodeId);\n\t\tthis._updateNodes();\t\n\t\t\n\t\treturn this;\n\t};\n\n\t/**\n\t * Create new nodes with random names.\n\t * @param {Integer} [count=1] - how many nodes.\n\t * @returns {Node}\n\t */\n\tcreateRandomNodes(count) {\n\t\tif ((typeof count !== \"undefined\" && typeof count !== \"number\") || count < 0) {\n\t\t\tthrow new TypeError('parameter count must be a positive number');\n\t\t}\n\t\treturn Array.from(new Array(count), (x) => {\n\t\t\treturn {\n\t\t\t\tid: getName(),\n\t\t\t\tbalance: getRandomNumber(10)\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * TODO: getRandomNode\n\t * @returns {Node}\n\t */\n\tgetRandomNode() {\n\t\treturn this._nodes[getRandomNumber(this._nodes.length)];\n\t}\n\n\t/**\n\t * TODO:\n\t * @private\n\t * @returns {d3.selection} this._channelElements\n\t */\n\t_updateChannels() {\n\t\tconst opt = this._opt;\n\n\t\tthis._channelElements = this.channelContainer.selectAll(\".channel\").data(this._channels);\n\n\t\t/* remove channels that no longer exist */\n\t\tthis._channelElements.exit().remove()\n\n\t\t/* create new svg elements for new channels */\n\t\tvar channelRoots = this._channelElements.enter().append(\"g\")\n\t\t\t\t.attr(\"class\", \"channel\")\n\t\t\t\t.attr(\"id\", (d) => d.id)\n\t\t\t\t.attr(\"source-balance\", (d) => d.sourceBalance)\n\t\t\t\t.attr(\"target-balance\", (d) => d.targetBalance)\n\t\t\t\t.attr(\"source-id\", (d) => d.source.id)\n\t\t\t\t.attr(\"target-id\", (d) => d.target.id);\n\n\t\tchannelRoots.append(\"path\")\n\t\t\t\t.attr(\"class\", \"path\")\n\t\t\t\t.style(\"stroke-width\", opt.channels.strokeWidth)\n\t\t\t\t.style(\"stroke\", opt.channels.color)\n\t\t\t\t.style(\"fill\", \"none\");\n\n\t\t\tlet sourceBalance = +channelRoots.attr(\"source-balance\");\n\t\t\tlet targetBalance = +channelRoots.attr(\"target-balance\");\n\t\t\tvar beadArray = Array.from(new Array(sourceBalance), (x, index) => {\n\t\t\t\treturn {\n\t\t\t\t\tstate: 0,\n\t\t\t\t\tindex: index\n\t\t\t\t}\n\t\t\t});\n\t\t\tbeadArray.push(...Array.from(new Array(targetBalance), (x, index) => {\n\t\t\t\treturn {\n\t\t\t\t\tstate: 1,\n\t\t\t\t\tindex: sourceBalance+index\n\t\t\t\t}\n\t\t\t}));\n\t\t\tconsole.log(beadArray);\n\t\t\n\t\t\tlet beadElements = channelRoots.selectAll(\".bead\").data(beadArray);\n\t\t\t\n\t\t\tbeadElements.exit().remove();\n\t\t\t\n\t\t\tlet beadElement = beadElements.enter().append(\"g\")\n\t\t\t\t.attr(\"class\", \"bead\")\t\n\t\t\t\t.attr(\"channel-state\", (d) => d.state) //TODO: 0 or 1?\n\t\t\t\t.attr(\"index\", (d) => d.index)\n\t\t\n\t\t\t\tbeadElement.append(\"circle\")\n\t\t\t\t.attr(\"r\",  opt.beads.radius)\n\t\t\t\t.style(\"stroke-width\", opt.beads.strokeWidth)\n\t\t\t\t.style(\"fill\", opt.beads.color)\n\t\t\t\t.style(\"stroke\", opt.beads.strokeColor);\n\n\t\t\tif (opt.beads.showIndex) {\n\t\t\t\t/* show bead index */\n\t\t\t\tbeadElement.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"bead-text\")\t\n\t\t\t\t\t.style(\"stroke-width\", 0.2)\n\t\t\t\t\t.attr(\"stroke\", opt.container.backgroundColor)\n\t\t\t\t\t.attr(\"fill\", opt.container.backgroundColor)\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t.attr(\"font-size\", \"8px\")\n\t\t\t\t\t.attr(\"y\", \"2px\")\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t\t\t.attr(\"pointer-events\", \"none\")\n\t\t\t\t\t.text((d) => d.index);\n\t\t\t}\n\n\t\t/* update this._paths; needed in this._ticked */\n\t\tthis._paths = this.channelContainer.selectAll(\".channel .path\");\n\t\tthis.beadElements = this.channelContainer.selectAll(\".channel .bead\");\n\n\t\treturn this._channelElements;\n\t}\n\n\t_getUniqueChannelId(channelInfos) {\n\t\tconst channelBalance = (channelInfos.sourceBalance || 0) + (channelInfos.targetBalance || 0);\n\t\tlet nonce = 0;\n\t\tlet id = `channel${channelInfos.source}${channelBalance}${channelInfos.target}${nonce}`;\n\t\twhile (this._channels.filter((channel) => channel.id == id).length > 0) {\n\t\t\tnonce++;\n\t\t\tid = `channel${channelInfos.source}${channelBalance}${channelInfos.target}${nonce}`;\n\t\t}\n\t\treturn id;\n\t}\n\n\t/**\n\t * TODO: addChannel\n\t * @param {Channel} channel \n\t */\n\taddChannel(channel) {;\n\t\tconst source = this._getNodeById(channel.source);\n\t\tconst target = this._getNodeById(channel.target);\n\t\tconst id = this._getUniqueChannelId(channel);\n\t\tthis._channels.push({\n\t\t\tid: id,\n\t\t\tsource: source, \n\t\t\ttarget: target,\n\t\t\tsourceBalance: channel.sourceBalance,\n\t\t\ttargetBalance: channel.targetBalance\n\t\t});\n\n\t\tsource.channelCount = source.channelCount + 1;\n\t\ttarget.channelCount = target.channelCount + 1;\n\n\t\tthis._updateChannels();\n\n\t\tthis.simulation.force(\"link\").links(this._channels)\n\t\t\n\t\tthis.simulation.alpha(1).restart();\n\t}\n\n\t/**\n\t * TODO: \n\t * @param {*} channels \n\t * @returns TODO:\n\t */\n\taddChannels(channels) {\n\t\tchannels.forEach((channel) => this.addChannel(channel));\n\t}\n\n\t\t/**\n\t * Create new nodes with random names.\n\t * @param {Integer} [count=1] - how many nodes.\n\t * @returns {Node}\n\t */\n\tcreateRandomChannels(count, unique) {\n\t\t// if ((typeof count !== \"undefined\" && typeof count !== \"number\") || count < 0) {\n\t\t// \tthrow new TypeError('parameter count must be a positive number');\n\t\t// }\n\t\tlet channels = Array.from(new Array(count), (x) =>  {\n\t\t\tlet source = this.getRandomNode();\n\t\t\tlet target = this.getRandomNode();\n\n\t\t\tif (unique) {\n\t\t\t\tlet killCounter = 0;\n\t\t\t\twhile((source.id == target.id || this.getChannels(source.id, target.id).length > 0) && killCounter < this._channels.length) {\n\t\t\t\t\tconsole.log(\"IGNORED: \", source.id, \"->\", target.id, killCounter);\n\t\t\t\t\tsource = this.getRandomNode();\n\t\t\t\t\ttarget = this.getRandomNode();\n\t\t\t\t\tkillCounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(\"New Channel: \", source.id, \"->\", target.id);\n\n\t\t\tlet sourceBalance = getRandomNumber(6);\n\t\t\tlet targetBalance = getRandomNumber(6);\n\t\t\tsourceBalance = (!sourceBalance && !targetBalance) ?  getRandomNumber(6)+1 : sourceBalance;\n\n\t\t\tlet channel = {\n\t\t\t\tsource: source.id, \n\t\t\t\ttarget: target.id,\n\t\t\t\tsourceBalance: sourceBalance,\n\t\t\t\ttargetBalance: targetBalance\n\t\t\t}\n\t\t\tchannel.id = this._getUniqueChannelId(channel);\n\t\t\treturn channel;\n\t\t});\n\t\treturn channels;\n\t}\n\n\t/**\n\t* TODO:\n\t*/\n\tgetRandomChannel() {\n\t\treturn this._channels[getRandomNumber(this._channels.length)];\n\t}\n\n\tgetChannelCount() {\n\t\treturn this._channels.length;\n\t}\n\n\t/**\n\t * TODO: \n\t * @returns TODO:\n\t */\n\tremoveChannel(sourceId, targetId) {\n\t\tthis._channels = this._channels.filter((channel) => (channel.source.id !== sourceId && channel.target.id !== targetId));\n\t\tthis._updateChannels();\t\n\t\t\n\t\treturn this;\n\t}\n\n\tgetChannels(sourceId, targetId) {\n\t\treturn this._channels.filter((channel) => \n\t\t\t(channel.source.id == sourceId && channel.target.id == targetId) ||\n\t\t\t(channel.target.id == sourceId && channel.source.id == targetId)\n\t\t);\n\t}\n\n\t_positionBeat(b) {\n\t\tconsole.log(\"_positionBeat \", b);\n\t\tconst bead = d3.select(b);\n\t\tconst index = bead.attr(\"index\");\n\t\tconst state = bead.attr(\"channel-state\"); // state 0=source, 1=target\n\t\tconst channel = d3.select(bead.node().parentNode);\n\t\tconst path = channel.select('path');\n\t\tconst sourceBalance = +channel.attr(\"source-balance\");\n\t\tconst targetBalance = +channel.attr(\"target-balance\");\n\t\tconst balance = sourceBalance + targetBalance;\n\t\tconst distanceBetweenBeads = this._opt.beads.distance + this._opt.beads.spacing;\n\t\tconst channelPadding = this._opt.beads.firstPosition +  this._opt.beads.spacing;\n\t\n\t\tvar startPosition = channelPadding + (index * distanceBetweenBeads);\t\n\t\tvar endPosition = channelPadding + ((balance-1-index) * distanceBetweenBeads);\n\t\tvar totalDistance = path.node().getTotalLength() - startPosition - endPosition;\n\t\n\t\tconst beadPosition = path.node().getPointAtLength(startPosition + state * totalDistance);\n\t\treturn `translate(${beadPosition.x},${beadPosition.y})`;\n\t}\n\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_ticked() {\n\t\tif (this._nodeElements) {\n\t\t\tthis._nodeElements.attr(\"transform\", (data) => `translate(${data.x},${data.y})`);\n\t\t}\n\t\tif (this._paths) {\n\t\t\tthis._paths.attr(\"d\", (d) => {\n\t\t\t\t// var count = this._channels.filter((c) => ((d.source.id === d.source.id) && (d.target.id === d.target.id))).length;\n\t\t\t\t// //console.log(count);\n\n\t\t\t\t// if (count <= 1) {\n\t\t\t\t\treturn `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`;\n\t\t\t\t// } else {\n\t\t\t\t// \tvar dx = d.target.x - d.source.x;\n\t\t\t\t// \tvar dy = d.target.y - d.source.y;\n\t\t\t\t// \tvar dr = Math.sqrt((dx*dx+count) + (dy*dy+count));\n\t\t\t\t// \treturn `M${d.source.x},${d.source.y}A${dr},${dr} 0 0,1 ${d.target.x},${d.target.y}`;\n\t\t\t\t// }\n\t\t\t});\n\t\t}\n\t\tthis.tickedBeads();\n\t}\n\n\ttickedBeads() {\n\t\tvar that = this;\n\t\tif (!this.beadElements || this.beadElements.length === 0|| this.beadElements.empty()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.beadElements.attr(\"transform\", function(d) {\n\t\t\treturn that._positionBeat(this);\n\t\t});\n\t}\n\t\n\tanimateBead(bead, delay) {\n\t\tvar that = this;\n\t\treturn bead\n\t\t\t.transition()\n\t\t\t\t.delay(delay)\t\n\t\t\t\t//.ease(d3.easeLinear)\n\t\t\t\t.ease(d3.easeQuadInOut)\n\t\t\t\t.duration(1000)\n\t\t\t\t.attrTween(\"channel-state\", function(a) { return function(t) { \n\t\t\t\t\tthat.tickedBeads();\n\t\t\t\t\treturn t;\n\t\t\t\t}});\n\t}\n\n\tmoveBeads(sourceId, targetId, beadCount) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\n\t\tconst channel = channels[0];\n\n\t\t// TODO: get channel with source and target\n\t\tconst channelElement = d3.select(`#${channel.id}`);\n\n\t\tconst balance = channel.sourceBalance + channel.targetBalance;\n\t\n\t\tvar startIndex = channel.sourceBalance - beadCount;\n\t\tvar endIndex = balance-1 - channel.targetBalance;\n\t\tfor (let i=endIndex; i>=startIndex; i--) {\n\t\t\tvar bead = channelElement.select(`.bead[index=\"${i}\"]`);\n\t\t\tconst delay = (endIndex-i)*100;\n\t\t\tthis.animateBead(bead, delay).on(\"end\", (channel, a, b) => {\n\t\t\t\tchannel.sourceBalance--;\n\t\t\t\tchannel.targetBalance++;\n\t\t\t\td3.select(`.channel[id=${channel.id}]`)\n\t\t\t\t\t.attr(\"source-balance\", channel.sourceBalance)\n\t\t\t\t\t.attr(\"target-balance\", channel.targetBalance);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragStart(d) {\n\t\tif (!d3.event.active) {\n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0.1)\n\t\t\t\t.restart();\n\t\t}\n\t\td.fx = d.x;\n\t\td.fy = d.y;\n\t}\n\t\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragged(d) {\n\t\td.fx = d3.event.x; \n\t\td.fy = d3.event.y;\n\t}\n\t\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragendEnd(d) {\n\t\tif (!d3.event.active) { \n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0);\n\t\t}\n\t\td.fx = null;\n\t\td.fy = null;\n\t}\n}\n\nexport default Beadnet;","\nclass InsufficientBalanceError extends Error {\n\tconstructor(sourceBalance, beadCount) {\n\t\tsuper(`The channel has an insufficient source balance of ${sourceBalance} to transmitt ${beadCount}`);\n\t}\n}\n\nexport {\n\tInsufficientBalanceError\n}"],"names":["names","getName","Math","floor","random","length","root","definition","this","noop","undefinedType","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","replaceLoggingMethods","level","loggerName","i","methodFactory","log","debug","defaultMethodFactory","console","undefined","Logger","name","defaultLevel","factory","currentLevel","self","storageKey","getPersistedLevel","storedLevel","window","localStorage","ignore","cookie","document","location","indexOf","encodeURIComponent","exec","slice","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","toUpperCase","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","module","exports","defaultOptions","d3","scaleOrdinal","schemeCategory10","getRandomNumber","sourceBalance","beadCount","Error","max","options","opt","_opt","assign","nodes","color","colorScheme","strokeColor","container","backgroundColor","beads","animation","easeExp","distance","radius","spacing","firstPosition","showIndex","querySelector","selector","svg","select","append","attr","updateSVGSize","chart","channelContainer","nodeContainer","_nodes","_channels","beadElements","simulation","_createSimulation","updateSimulationCenter","behaviors","createBehaviors","zoom","_updateNodes","addEventListener","onResize","id","map","d","get","forceSimulation","force","forceManyBody","strength","forceLink","forceDistance","forceX","forceY","alphaTarget","on","_ticked","width","clientWidth","height","clientHeight","scaleExtent","_this","event","transform","drag","_onDragStart","_onDragged","_onDragendEnd","centerX","centerY","forceCenter","restart","_nodeElements","selectAll","data","exit","remove","nodeParent","enter","balance","style","strokeWidth","text","_this2","alpha","node","channelCount","push","forEach","_this3","addNode","nodeId","filter","count","Array","from","x","_channelElements","channelRoots","targetBalance","source","target","channels","beadArray","index","beadElement","state","_paths","channelInfos","channelBalance","nonce","channel","_getNodeById","_getUniqueChannelId","_updateChannels","links","_this4","addChannel","unique","_this5","getRandomNode","killCounter","getChannels","sourceId","targetId","b","bead","parentNode","path","distanceBetweenBeads","channelPadding","startPosition","endPosition","totalDistance","getTotalLength","beadPosition","getPointAtLength","y","tickedBeads","that","empty","_positionBeat","delay","transition","ease","easeQuadInOut","duration","attrTween","a","t","channelElement","startIndex","endIndex","animateBead","active","fx","fy"],"mappings":"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"}