{"version":3,"file":"beadnet.standalone.min.js","sources":["../node_modules/loglevel/lib/loglevel.js","../src/logger.js","../node_modules/extend/index.js","../src/options.js","../src/errors.js","../src/helpers.js","../node_modules/datasets-unisex-first-names-en/dataset.js","../src/namegenerator.js","../src/Nodes.js","../src/beadnet.js"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","import log from 'loglevel';\n\nlog.enableAll();\nlog.setLevel(\"TRACE\");\n\nexport default log;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import extend from \"extend\";\n\nconst defaultOptions = {\n\t\t\t\n\tcolorScheme: d3.scaleOrdinal(d3.schemeCategory20),\n\n\tdebug: false,\n\n\tcontainer: {\n\t\tselector: '#beadnet',\n\t\tbackgroundColor: '#FFF'\n\t},\n\n\tnodes: {\n\t\tradius: 30,\n\t\tcolor: null,\n\t\tstrokeWidth: 3,\n\t\tstrokeColor: null,\n\n\t\t/* ['id', 'balance'] */\n\t\ttext: 'id'\n\t},\n\n\tchannels: {\n\t\tcolor: 'gray',\n\t\tcolorHighlighted: null,\n\n\t\t/* Number or 'auto' */\n\t\tstrokeWidth: 'auto', \n\t\tstrokeColor: null,\n\n\t\t/* show channel balance as text path */\n\t\tshowBalance: false\n\t},\n\n\tbeads: {\n\t\tradius: 10,\n\t\tspacing: -0.5,\n\t\tstrokeWidth: 2,\n\t\tstrokeColor: null,\n\n\t\tshowIndex: true\n\t}\n};\n\n/** \n * Merge default option with user given options \n * To make a parameter required set it to \"undefined\" in the defaults. \n */\nfunction extendDefaultOptions(options) {\n\tlet opt = {};\n\textend(true, opt, defaultOptions, options);\n\t\n\topt.nodes.color = opt.nodes.color || opt.colorScheme(0);\n\topt.nodes.strokeColor = opt.nodes.strokeColor || opt.container.backgroundColor;\n\n\topt.channels.color = opt.channels.color || opt.colorScheme(15);\n\topt.channels.colorHighlighted = opt.channels.colorHighlighted || opt.colorScheme(19);\n\n\topt.beads.color = opt.beads.color || opt.colorScheme(10);\n\topt.beads.strokeColor = opt.beads.strokeColor || opt.container.backgroundColor;\n\topt.beads.animation = opt.beads.animation || d3.easeExp;\n\t\n\topt.beads.distance = opt.beads.radius*2\n\t\t+ opt.beads.spacing \n\t\t+ opt.beads.strokeWidth;\n\topt.beads.firstPosition = \n\t\topt.nodes.radius + opt.nodes.strokeWidth/2\n\t\t+ opt.beads.radius + opt.beads.strokeWidth/2\n\t\t+ opt.beads.spacing;\n\topt.beads.showIndex = opt.beads.showIndex === null ? opt.debug : opt.beads.showIndex;\n\t\n\treturn opt;\n}\n\nexport default extendDefaultOptions;\n","\nclass InsufficientBalanceError extends Error {\n\tconstructor(sourceBalance, beadCount) {\n\t\tsuper(`The channel has an insufficient source balance of ${sourceBalance} to transmitt ${beadCount}`);\n\t}\n}\n\nexport {\n\tInsufficientBalanceError\n}","\nfunction getRandomNumber(max) {\n\treturn Math.floor(Math.random() * max);\n}\n\n\nexport default getRandomNumber","module.exports = [\n\t\"Aarya\",\n\t\"Addison\",\n\t\"Adrian\",\n\t\"Aiden\",\n\t\"Ainsley\",\n\t\"Alby\",\n\t\"Alex\",\n\t\"Alexis\",\n\t\"Ali\",\n\t\"Amari\",\n\t\"Andy\",\n\t\"Angel\",\n\t\"Archer\",\n\t\"Ari\",\n\t\"Arya\",\n\t\"Ash\",\n\t\"Ashley\",\n\t\"Aspen\",\n\t\"Aubrey\",\n\t\"August\",\n\t\"Austen\",\n\t\"Avery\",\n\t\"Bailey\",\n\t\"Bay\",\n\t\"Billy\",\n\t\"Blaine\",\n\t\"Blair\",\n\t\"Blake\",\n\t\"Bobbie\",\n\t\"Brady\",\n\t\"Brett\",\n\t\"Brook\",\n\t\"Brooklyn\",\n\t\"Caelan\",\n\t\"Cameron\",\n\t\"Campbell\",\n\t\"Carmen\",\n\t\"Carroll\",\n\t\"Carson\",\n\t\"Casey\",\n\t\"Cassidy\",\n\t\"Celyn\",\n\t\"Charlie\",\n\t\"Chris\",\n\t\"Clay\",\n\t\"Cody\",\n\t\"Corey\",\n\t\"Dakota\",\n\t\"Dale\",\n\t\"Dallas\",\n\t\"Dana\",\n\t\"Dane\",\n\t\"Darrel\",\n\t\"Daryl\",\n\t\"Delta\",\n\t\"Devin\",\n\t\"Devon\",\n\t\"Dorian\",\n\t\"Drew\",\n\t\"Dylan\",\n\t\"Easton\",\n\t\"Eddie\",\n\t\"Eden\",\n\t\"Eli\",\n\t\"Ellery\",\n\t\"Elliott\",\n\t\"Emerson\",\n\t\"Emery\",\n\t\"Erin\",\n\t\"Fabian\",\n\t\"Finley\",\n\t\"Florian\",\n\t\"Flynn\",\n\t\"Frances\",\n\t\"Francis\",\n\t\"Frankie\",\n\t\"Gabriel\",\n\t\"Glenn\",\n\t\"Gray\",\n\t\"Hadley\",\n\t\"Harley\",\n\t\"Harper\",\n\t\"Hayden\",\n\t\"Hero\",\n\t\"Hudson\",\n\t\"Hunter\",\n\t\"Indiana\",\n\t\"Jade\",\n\t\"James\",\n\t\"Jamie\",\n\t\"Jayden\",\n\t\"Jean\",\n\t\"Jesse\",\n\t\"Jessie\",\n\t\"Jordan\",\n\t\"Jules\",\n\t\"Julian\",\n\t\"Justice\",\n\t\"Kaden\",\n\t\"Kadin\",\n\t\"Kai\",\n\t\"Karter\",\n\t\"Keegan\",\n\t\"Kelly\",\n\t\"Kelsey\",\n\t\"Kendall\",\n\t\"Kennedy\",\n\t\"Kerry\",\n\t\"Kyle\",\n\t\"Lake\",\n\t\"Landry\",\n\t\"Lane\",\n\t\"Lee\",\n\t\"Lincoln\",\n\t\"Linden\",\n\t\"Logan\",\n\t\"London\",\n\t\"Lonnie\",\n\t\"Lou\",\n\t\"Lucian\",\n\t\"Lumi\",\n\t\"Mackenzie\",\n\t\"Madison\",\n\t\"Marley\",\n\t\"Mason\",\n\t\"Max\",\n\t\"Maxwell\",\n\t\"Micah\",\n\t\"Monroe\",\n\t\"Montana\",\n\t\"Morgan\",\n\t\"Moriah\",\n\t\"Nevada\",\n\t\"Nico\",\n\t\"Noel\",\n\t\"Oakley\",\n\t\"Ode\",\n\t\"Ore\",\n\t\"Paris\",\n\t\"Parker\",\n\t\"Pat\",\n\t\"Payton\",\n\t\"Perry\",\n\t\"Peyton\",\n\t\"Phoenix\",\n\t\"Piper\",\n\t\"Quinn\",\n\t\"Raphael\",\n\t\"Ray\",\n\t\"Reagan\",\n\t\"Reed\",\n\t\"Reese\",\n\t\"Remy\",\n\t\"Riley\",\n\t\"River\",\n\t\"Roan\",\n\t\"Robin\",\n\t\"Rory\",\n\t\"Roux\",\n\t\"Rowan\",\n\t\"Rudy\",\n\t\"Ryan\",\n\t\"Sage\",\n\t\"Sam\",\n\t\"Samar\",\n\t\"Sawyer\",\n\t\"Scout\",\n\t\"Sean\",\n\t\"Shawn\",\n\t\"Sky\",\n\t\"Skylar\",\n\t\"Spencer\",\n\t\"Stevie\",\n\t\"Sunny\",\n\t\"Sydney\",\n\t\"Tanner\",\n\t\"Tatum\",\n\t\"Taylor\",\n\t\"Terry\",\n\t\"Toby\",\n\t\"Toni\",\n\t\"Tory\",\n\t\"Tru\",\n\t\"Tyler\",\n\t\"Umber\",\n\t\"Unique\",\n\t\"Val\",\n\t\"Vesper\",\n\t\"Wallace\",\n\t\"West\",\n\t\"Winter\",\n\t\"Wyatt\",\n\t\"Wynne\",\n\t\"Xen\",\n\t\"Xoan\",\n\t\"Yael\",\n\t\"Zion\"\n];","import names from \"datasets-unisex-first-names-en\";\n\nfunction getName() {\n\treturn names[Math.floor(Math.random()*names.length)];\n}\n\nexport default getName","import getName from './namegenerator.js';\nimport getRandomNumber from './helpers.js';\n\n\nclass Nodes {\n\n    constructor(options) {\n        this._nodes = [];\n\n        this._opt = options.opt;\n        this.simulation = options.simulation;\n        this.nodeContainer = options.nodeContainer;\n    }\n\n\tgetNodes() {\n\t\treturn this._nodes;\n\t}\n\n\t/**\n\t * Return the node with the given id.\n\t * @param {String} id - the id of the node to find.\n\t * @returns {Node|undefined}\n\t */\n\tgetNodeById(id) {\n\t\treturn this._nodes.find((node) => node.id == id);\n    }\n    \n    /**\n\t * Update DOM elements after this._nodes has been updated.\n\t * This creates the SVG repensentation of a node.\n\t * \n\t * @private\n\t */\n\tupdate() {\n\t\tconst opt = this._opt;\n\n\t\tconsole.log(\"update: \", this._nodes);\n\n\t\tthis._nodeElements = this.nodeContainer\n\t\t\t.selectAll(\".node\")\n\t\t\t.data(this._nodes, (data) => data.id);\n\n\t\t/* remove deleted nodes */\n\t\tthis._nodeElements.exit().transition().duration(1000).style(\"opacity\", 0).remove();\n\n\t\t/* create new nodes */\n\t\tvar nodeParent = this._nodeElements.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"node\")\n\t\t\t.attr(\"id\", (data) => data.id)\n\t\t\t.attr(\"balance\", (data) => data.balance)\n\t\t\t.style(\"stroke\", opt.nodes.strokeColor)\n\t\t\t.style(\"stroke-width\", opt.nodes.strokeWidth)\n\t\t\t\t\n\t\tnodeParent.append(\"circle\")\n\t\t\t.attr(\"class\", \"node-circle\")\n\t\t\t.attr(\"fill\", (data) => data.color)\n\t\t\t.attr(\"r\", opt.nodes.radius)\n\t\t\t.style(\"cursor\", \"pointer\");\n\t\t\t\t\n\t\tnodeParent.append(\"text\")\n\t\t\t.style(\"stroke-width\", 0.5)\n\t\t\t.attr(\"class\", \"node-text-id\")\n\t\t\t.attr(\"stroke\", opt.container.backgroundColor)\n\t\t\t.attr(\"fill\", opt.container.backgroundColor)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", \"15px\")\n\t\t\t.attr(\"y\", \"0px\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"pointer-events\", \"none\")\n\t\t\t.text((d) => d.id);\n\n\t\tnodeParent.append(\"text\")\n\t\t\t.style(\"stroke-width\", 0.5)\n\t\t\t.attr(\"class\", \"node-text-balance\")\n\t\t\t.attr(\"stroke\", opt.container.backgroundColor)\n\t\t\t.attr(\"fill\", opt.container.backgroundColor)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", \"12px\")\n\t\t\t.attr(\"y\", \"15px\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"pointer-events\", \"none\")\n\t\t\t.text((d) => d.balance);\n\n\t\tnodeParent.call(d3.drag()\n            .on(\"start\", (d) => {\n                d.fx = d.x;\n\t\t        d.fy = d.y;\n            })\n            .on(\"drag\", (d) => {\n                d.fx = d3.event.x; \n\t\t        d.fy = d3.event.y;\n            })\n            .on(\"end\", (d) => {\n                d.fx = null;\n\t\t        d.fy = null;\n            })\n        );\n\n\t\t/* update existing nodes */\n\t\tthis._nodeElements\n\t\t\t.attr(\"balance\", (d) => d.balance)\n\t\t\t.selectAll('.node-text-balance')\n\t\t\t\t.text((d) => d.balance);\n\n        // TODO:\n\t\tthis.simulation\n\t\t\t.nodes(this._nodes)\n\t\t\t.alphaTarget(1)\n\t\t\t.restart();\n\n\t\tthis._nodeElements = this.nodeContainer.selectAll(\".node\")\n\n\t\treturn this._nodeElements;\n\t}\n\n\t/**\n\t * Adds a new node to the network.\n\t * \n\t * @param {Node} node \n\t * @returns {BeatNet}\n\t */\n\taddNode(node) {\n\t\tnode = node || {};\n\n\t\t/* initialize with default values */\n\t\tnode.id = node.id || getName();\n        node.balance = node.balance || getRandomNumber(100);\n        node.color = this._opt.colorScheme(this._nodes.length % 20 + 1);\n\n\t\t/* save to nodes array */\n\t\tthis._nodes.push(node);\n\t\tthis.update();\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds multible new nodes to the network.\n\t * \n\t * @param {Array<Node>} nodes\n\t * @returns {BeatNet}\n\t */\n\taddNodes(nodes) {\n\t\tnodes.forEach((node) => this.addNode(node));\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes a the node with the given id from the network.\n\t * \n\t * @param {String} nodeId \n\t * @returns {BeatNet}\n\t */\n\tremoveNode(nodeId) {\n\t\tthis._nodes = this._nodes.filter((node) => node.id != nodeId);\n\t\n\t\tthis.update();\t\n\t\t\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t};\n\n\t/**\n\t * Create new nodes with random names.\n\t * @param {Integer} [count=1] - how many nodes.\n\t * @returns {Node}\n\t */\n\tcreateRandomNodes(count) {\n\t\tif ((typeof count !== \"undefined\" && typeof count !== \"number\") || count < 0) {\n\t\t\tthrow new TypeError('parameter count must be a positive number');\n\t\t}\n\t\treturn Array.from(new Array(count), (x) => {\n\t\t\treturn {\n\t\t\t\tid: getName(),\n\t\t\t\tbalance: getRandomNumber(100)\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * TODO: getRandomNode\n\t * @returns {Node}\n\t */\n\tgetRandomNode() {\n\t\treturn this._nodes[getRandomNumber(this._nodes.length)];\n    }\n    \n    render() {\n        if (this._nodeElements) {\n\t\t\tthis._nodeElements.attr(\"transform\", (data) => `translate(${data.x},${data.y})`);\n\t\t}\n    }\n\n}\n\nexport default Nodes","import log from './logger.js';\nimport extendDefaultOptions from './options.js';\n\nimport { InsufficientBalanceError } from './errors.js';\n\nimport getRandomNumber from './helpers.js';\n\nimport Nodes from './Nodes.js';\n\n/**\n * TODO:\n */\nclass Beadnet {\n\n\t/**\n\t * Create a new BeadNet chart.\n\t * @param {Object} options \n\t */\n\tconstructor(options) {\n\t\tthis._opt = extendDefaultOptions(options);\n\t\tlog.debug(\"initializing beadnet with options: \", this._opt);\n\n\t\t/* find the parent container DOM element and insert an SVG */\n\t\tthis.container = document.querySelector(this._opt.container.selector);\n\t\tthis.svg = d3.select(this.container)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"class\", \"beadnet\");\n\t\t\n\t\tthis.updateSVGSize();\n\n\t\t/* create svg root element called with class \"chart\" and initial  */\n\t\tthis.chart = this.svg.append(\"g\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"transform\", \"translate(0,0) scale(1)\");\n\n\t\t/* create a SVG-container-element for all nodes and all channels */\n\t\tthis.channelContainer = this.chart.append(\"g\").attr(\"class\", \"channels\");\n\t\t\n\t\tlet nodeContainer = this.chart.append(\"g\").attr(\"class\", \"nodes\");\n\t\n\n\t\tthis._channels = [];\n\t\tthis.beadElements = [];\n\n\t\tthis.simulation = this._createSimulation();\n\n\t\tthis.nodes = new Nodes({\n\t\t\topt: this._opt,\n\t\t\tnodeContainer,\n\t\t\tsimulation : this.simulation\n\t\t});\n\t\t\n\t\tthis.updateSimulationCenter();\n\n\t\tthis.behaviors = this.createBehaviors();\n\t\tthis.svg.call(this.behaviors.zoom);\n\n\t\tthis.nodes.update();\n\t\t\n\t\twindow.addEventListener(\"resize\", this.onResize.bind(this));\n\t}\n\n\taddNode(node) {\n\t\treturn this.nodes.addNode(node)\n\t}\n\n\taddNodes(nodes) {\n\t\treturn this.nodes.addNodes(nodes)\n\t}\n\n\tremoveNode(id) {\n\t\treturn this.nodes.removeNode(id);\n\t\t//TODO remove all channels of this node\n\t}\n\n\tcreateRandomNodes(amount = 1) {\n\t\treturn this.nodes.createRandomNodes(amount);\n\t}\n\n\tgetRandomNode() {\n\t\treturn this.nodes.getRandomNode();\n\t}\n\n\n\n\t/**\n\t * Return the channel with the given id.\n\t * @param {String} id - the id of the node to find.\n\t * @returns {Channel|undefined}\n\t */\n\t_getChannelById(id) {\n\t\treturn this._channels.find((ch) => ch.id == id);\n\t}\n\n\t/**\n\t * @returns {d3.forceSimulation} simulation\n\t * @private\n\t */\n\t_createSimulation() {\n\t\t// return d3.forceSimulation()\n\t\t// \t.nodes(this._nodes)\n\t\t// \t.alphaDecay(0.1)\n\t\t// \t//.force(\"x\", d3.forceX().strength(0))\n\t\t// \t//.force(\"y\", d3.forceY().strength(1))\n\t\t// \t.force(\"charge\", d3.forceManyBody().strength(-1000).distanceMin(this.forceDistance).distanceMax(3*this.forceDistance))\n\t\t// \t//.force(\"collide\", d3.forceCollide(this.forceDistance/6))\n\t\t// \t.force(\"link\", d3.forceLink(this._channels).distance(this.forceDistance))\n\t\t// \t.force(\"center\", d3.forceCenter(this.width / 2, this.height / 2))\n\t\t// \t.alphaTarget(0)\n\t\t// \t.on(\"tick\", this._ticked.bind(this));\n\n\t\treturn d3.forceSimulation(/*this.nodes.getNodes()*/)\n\t\t\t.force(\"charge\", d3.forceManyBody().strength(-3000))\n\t\t\t.force(\"link\", d3.forceLink(this._channels).strength(0.005).distance(this.forceDistance))\n\t\t\t.force(\"x\", d3.forceX())\n\t\t\t.force(\"y\", d3.forceY())\n\t\t\t.alphaTarget(0)\n\t\t\t.on(\"tick\", this._ticked.bind(this));\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tupdateSVGSize() {\n\t\tthis.width = +this.container.clientWidth;\n\t\tthis.height = +this.container.clientHeight;\n\t\tthis.forceDistance = (this.width + this.height)*.1;\n\t\tthis.svg\n\t\t\t.attr(\"width\", this.width)\n\t\t\t.attr(\"height\", this.height);\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tonResize() {\n\t\tthis.updateSVGSize();\n\t\tthis.updateSimulationCenter();\n\t\tthis.createBehaviors();\n\t}\n\t\n\t/**\n\t * TODO:\n\t */\n\tcreateBehaviors() {\n\t\treturn {\n\n\t\t\tzoom: d3.zoom()\n\t\t\t\t.scaleExtent([0.1, 5, 4])\n\t\t\t\t.on('zoom', () => this.chart.attr('transform', d3.event.transform)),\n\n\t\t\tdrag: d3.drag()\n\t\t\t\t.on(\"start\", this._onDragStart.bind(this))\n\t\t\t\t.on(\"drag\", this._onDragged.bind(this))\n\t\t\t\t.on(\"end\", this._onDragendEnd.bind(this))\n\t\t}\n\t}\n\n\t/**\n\t * TODO:\n\t */\n\tupdateSimulationCenter() {\n\t\tconst centerX = this.svg.attr('width') / 2;\n\t\tconst centerY = this.svg.attr('height') / 2;\n\t\tthis.simulation\n\t\t\t.force(\"center\", d3.forceCenter(centerX, centerY))\n\t\t\t.restart();\n\t}\n\n\t/**\n\t * TODO:\n\t * @private\n\t * @returns {d3.selection} this._channelElements\n\t */\n\t_updateChannels() {\n\t\tconst opt = this._opt;\n\n\t\t/* update beads of each channel */\n\t\tthis._channels =  this._channels.map((ch) => {\n\t\t\tconst balance = ch.sourceBalance + ch.targetBalance;\n\t\t\tlet index = -1;\n\t\t\tch.beads = [];\n\t\t\tch.beads.push(...Array.from(new Array(ch.sourceBalance), (x) => {\n\t\t\t\tindex++\n\t\t\t\treturn {\n\t\t\t\t\tstate: 0,\n\t\t\t\t\tindex: index,\n\t\t\t\t\t//id: `bead_${ch.id}_source_${index}x${ch.sourceBalance}`\n\t\t\t\t\tid: `bead_${ch.id}_source_${index}x${balance}`\n\t\t\t\t}\n\t\t\t}));\n\t\t\tch.beads.push(...Array.from(new Array(ch.targetBalance), (x) => {\n\t\t\t\tindex++\n\t\t\t\treturn {\n\t\t\t\t\tstate: 1,\n\t\t\t\t\tindex: index,\n\t\t\t\t\t//id: `bead_${ch.id}_target_${index}x${ch.targetBalance}`\n\t\t\t\t\tid: `bead_${ch.id}_target_${index}x${balance}`\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn ch;\n\t\t});\n\n\t\tconsole.log(\"_updateChannels: \", this._channels);\n\n\t\tthis._channelElements = this.channelContainer.selectAll(\".channel\").data(this._channels, (d) => d.id);\n\n\t\t/* remove channels that no longer exist */\n\t\tthis._channelElements.exit()\n\t\t\t.transition()\n\t\t\t.duration(500)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove();\n\n\t\t/* create new svg elements for new channels */\n\t\tvar channelRoots = this._channelElements.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"channel\")\n\n\t\tthis._channelElements.merge(channelRoots)\n\t\t\t.attr(\"id\", (d) => d.id )\n\t\t\t.attr(\"source-balance\", (d) => d.sourceBalance)\n\t\t\t.attr(\"target-balance\", (d) => d.targetBalance)\n\t\t\t.attr(\"source-id\", (d) => d.source.id)\n\t\t\t.attr(\"target-id\", (d) => d.target.id)\n\t\t\t.attr(\"highlighted\", (d) => d.hightlighted)\n\n\t\tchannelRoots\n\t\t\t.append(\"path\")\n\t\t\t\t.attr(\"class\", \"path\")\n\t\t\t\t.attr(\"id\", (d) =>  `${d.id}_path`)\n\t\t\t\t.style(\"stroke-width\", (d) => opt.channels.strokeWidth == 'auto' ? (d.sourceBalance+d.targetBalance)*2 : opt.channels.strokeWidth)\n\t\t\t\t.style(\"stroke\", opt.channels.color)\n\t\t\t\t.style(\"fill\", \"none\");\n\n\t\tif (this._opt.channels.showBalance) {\n\t\t\tchannelRoots\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"channel-text\")\n\t\t\t\t\t.attr(\"font-family\", \"Verdana\")\n\t\t\t\t\t.attr(\"font-size\", \"12\")\n\t\t\t\t\t.attr(\"dx\", 150) //TODO: place this dynamic between the beads on the path\n\t\t\t\t\t.attr(\"dy\", -7)\n\t\t\t\t\t.style(\"pointer-events\", \"none\")\n\t\t\t\t\t.append(\"textPath\")\n\t\t\t\t\t\t.attr(\"xlink:href\", (d) => `#${d.id}_path`)\n\t\t\t\t\t\t.attr(\"class\", \"channel-text-path\")\n\t\t\t\t\t\t.style(\"stroke-width\", 1)\n\t\t\t\t\t\t.style(\"stroke\", opt.channels.color)\n\t\t\t\t\t\t.style(\"fill\", \"none\")\n\t\t\t\t\t\t.text((d) => `${d.sourceBalance}:${d.targetBalance}`)\n\t\t}\n\n\t\tvar beadsContainer = channelRoots.append(\"g\")\n\t\t\t.attr(\"class\", \"beads\")\n\t\t\t.attr(\"id\", (d) => 'beads_container');\n\n\t\tthis.beadElements = beadsContainer.selectAll(\".bead\")\n\t\t\t.data((d) => d.beads, (d) => d.id);\n\n\t\tthis.beadElements.exit()\n\t\t\t.transition()\n\t\t\t.duration(800)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove();\n\n\t\tlet beadElement = this.beadElements.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"bead\")\n\n\t\tthis.beadElements.merge(beadElement)\n\t\t\t.attr(\"channel-state\", (d) => d.state) //TODO: 0 or 1?\n\t\t\t.attr(\"id\", (d) => d.id )\t\n\t\t\t.attr(\"index\", (d) => d.index)\n\n\t\tbeadElement.append(\"circle\")\n\t\t\t.attr(\"r\",  opt.beads.radius)\n\t\t\t.style(\"stroke-width\", opt.beads.strokeWidth)\n\t\t\t.style(\"fill\", opt.beads.color)\n\t\t\t.style(\"stroke\", opt.beads.strokeColor);\n\n\t\tif (opt.beads.showIndex) {\n\t\t\t/* show bead index */\n\t\t\tbeadElement.append(\"text\")\n\t\t\t\t.attr(\"class\", \"bead-text\")\t\n\t\t\t\t.attr(\"stroke\", opt.container.backgroundColor)\n\t\t\t\t.attr(\"fill\", opt.container.backgroundColor)\n\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t.attr(\"font-size\", \"8px\")\n\t\t\t\t.attr(\"y\", \"2px\")\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t\t.attr(\"pointer-events\", \"none\")\n\t\t\t\t.style(\"stroke-width\", 0.2)\n\t\t\t\t.text((d) => d.index);\n\t\t}\n\n\t\t/* update channel */\n\t\t// this._channelElements\n\t\t// \t.attr(\"source-balance\", (d) => d.sourceBalance)\n\t\t// \t.attr(\"target-balance\", (d) => d.targetBalance)\n\t\t// \t.attr(\"source-id\", (d) => d.source.id)\n\t\t// \t.attr(\"target-id\", (d) => d.target.id)\n\t\t// \t.attr(\"highlighted\", (d) => d.hightlighted);\n\n\t\t// this._channelElements.selectAll('.path')\n\t\t// \t.attr(\"id\", (d) =>  `${d.id}_path`)\n\t\t// \t.style(\"stroke-width\", opt.channels.strokeWidth)\n\t\t// \t.style(\"stroke\", opt.channels.color)\n\t\t// \t.style(\"fill\", \"none\");\n\n\t\tif (this._opt.channels.showBalance) {\n\t\t\tthis._channelElements.selectAll('.channel-text-path')\n\t\t\t\t.text((d) => `${d.sourceBalance}:${d.targetBalance}`);\n\t\t}\n\n\t\t/***************************************************/\n\t\t/* update channel styles */\n\t\tthis._channelElements.selectAll('[highlighted=true] .path')\n\t\t\t.style(\"stroke\", opt.channels.colorHighlighted)\n\n\t\tthis._channelElements.selectAll('[highlighted=false] .path')\n\t\t\t.style(\"stroke\", opt.channels.color)\n\t\t/************************************************* */\n\n\t\t/* update this._paths; needed in this._ticked */\n\t\tthis._paths = this.channelContainer.selectAll(\".channel .path\");\n\t\tthis.beadElements = this.channelContainer.selectAll(\".channel .beads .bead\");\n\n\t\tthis.simulation\n\t\t\t.force(\"link\")\n\t\t\t.links(this._channels)\n\n\t\tthis.simulation\n\t\t\t.alphaTarget(0)\n\t\t\t.restart()\n\n\t\treturn this._channelElements;\n\t}\n\n\t/**\n\t * TODO:\n\t * @param {*} channelInfos \n\t */\n\t_getUniqueChannelId(channelInfos) {\n\t\tconst channelBalance = (+channelInfos.sourceBalance || 0) + (+channelInfos.targetBalance || 0);\n\t\tlet nonce = 0;\n\t\tlet id = `channel${channelInfos.source}${channelBalance}${channelInfos.target}${nonce > 0 ? nonce : ''}`;\n\t\twhile (this._channels.filter((channel) => channel.id == id).length > 0) {\n\t\t\tnonce++;\n\t\t\tid = `channel${channelInfos.source}${channelBalance}${channelInfos.target}${nonce > 0 ? nonce : ''}`;\n\t\t}\n\t\treturn id;\n\t}\n\n\t/**\n\t * TODO: addChannel\n\t * @param {Channel} channel \n\t */\n\taddChannel(channel) {;\n\t\tchannel.sourceBalance = channel.sourceBalance || 0;\n\t\tchannel.targetBalance = channel.targetBalance || 0;\n\t\t\n\t\tif (!channel.sourceBalance && !channel.targetBalance) {\n\t\t\tthrow new Error(\"Its not possible to create a channel without any funds. Please add a sourceBalance and/or targetBalance.\");\n\t\t}\n\n\t\tlet source = this.nodes.getNodeById(channel.source);\n\t\tlet target = this.nodes.getNodeById(channel.target);\n\n\t\tif (source.balance < channel.sourceBalance) {\n\t\t\tthrow new Error(\"Insufficient Funds. The source node has not enough funds to open this channel\");\n\t\t}\n\t\tif (target.balance < channel.targetBalance) {\n\t\t\tthrow new Error(\"Insufficient Funds. The target node has not enough funds to open this channel\");\n\t\t}\n\n\t\t/* update balance of the source and target nodes */\n\t\tsource.balance -= channel.sourceBalance;\n\t\ttarget.balance -= channel.targetBalance;\n\t\tthis.nodes.update();\n\n\t\t/* update the internal channel list */\n\t\tconst id = this._getUniqueChannelId(channel);\n\t\tthis._channels.push({\n\t\t\tid: id,\n\t\t\thightlighted: false,\n\t\t\tsource: source, \n\t\t\ttarget: target,\n\t\t\tsourceBalance: channel.sourceBalance,\n\t\t\ttargetBalance: channel.targetBalance\n\t\t});\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * TODO: \n\t * @param {*} channels \n\t * @returns TODO:\n\t */\n\taddChannels(channels) {\n\t\tchannels.forEach((channel) => this.addChannel(channel));\n\t}\n\n\t\t/**\n\t * Create new nodes with random names.\n\t * @param {Integer} [count=1] - how many nodes.\n\t * @returns {Node}\n\t */\n\tcreateRandomChannels(count, unique = true) {\n\t\t// if ((typeof count !== \"undefined\" && typeof count !== \"number\") || count < 0) {\n\t\t// \tthrow new TypeError('parameter count must be a positive number');\n\t\t// }\n\t\tlet channels = Array.from(new Array(count), (x) =>  {\n\t\t\tlet source = this.getRandomNode();\n\t\t\tlet target = this.getRandomNode();\n\n\t\t\tif (unique) {\n\t\t\t\tlet killCounter = 0;\n\t\t\t\twhile((\n\t\t\t\t\tsource.id == target.id || \n\t\t\t\t\t(\tthis.getChannels(source.id, target.id).length > 0) && \n\t\t\t\t\t\tkillCounter < this._channels.length)\n\t\t\t\t\t) {\n\t\t\t\t\tsource = this.getRandomNode();\n\t\t\t\t\ttarget = this.getRandomNode();\n\t\t\t\t\tkillCounter++;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet sourceBalance = getRandomNumber(4);\n\t\t\tlet targetBalance = getRandomNumber(4);\n\t\t\tsourceBalance = (!sourceBalance && !targetBalance) ?  getRandomNumber(4)+1 : sourceBalance;\n\n\t\t\tlet channel = {\n\t\t\t\tsource: source.id, \n\t\t\t\ttarget: target.id,\n\t\t\t\tsourceBalance: sourceBalance,\n\t\t\t\ttargetBalance: targetBalance\n\t\t\t}\n\t\t\tchannel.id = this._getUniqueChannelId(channel);\n\t\t\treturn channel;\n\t\t});\n\t\treturn channels;\n\t}\n\n\t/**\n\t* TODO:\n\t*/\n\tgetRandomChannel() {\n\t\treturn this._channels[getRandomNumber(this._channels.length)];\n\t}\n\n\t/**\n\t * TODO:\n\t */\n\tgetChannelCount() {\n\t\treturn this._channels.length;\n\t}\n\n\t/**\n\t * Remove channel with the given source and target ids.\n\t * @returns {Beatnet} beatnet\n\t */\n\tremoveChannel(sourceId, targetId) {\n\t\tthis._channels = this._channels.filter((channel) => {\n\t\t\tif ((channel.source.id != sourceId) || (channel.target.id != targetId)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet sourceNode = this.nodes.getNodeById(sourceId);\n\t\t\t\tsourceNode.balance += channel.sourceBalance;\n\t\t\t\tlet targetNode = this.nodes.getNodeById(targetId);\n\t\t\t\ttargetNode.balance += channel.targetBalance;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t\n\n\t\tconsole.log(\"removeChannel: \",this._channels);\n\t\tthis.nodes.update();\n\t\tthis._updateChannels();\t\n\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * TODO:\n\t * @param {String} sourceId \n\t * @param {String} targetId \n\t */\n\tgetChannels(sourceId, targetId) {\n\t\treturn this._channels.filter((channel) => \n\t\t\t(channel.source.id == sourceId && channel.target.id == targetId) ||\n\t\t\t(channel.target.id == sourceId && channel.source.id == targetId)\n\t\t);\n\t}\n\n\t/**\n\t * Transfer a amount from the source node banlance to or from the channel.\n\t * @param {String} sourceId - source node id\n\t * @param {String} targetId - target node id\n\t * @param {Integer} amount - positive if moved from not to channel; negative if moved from channel to node.\n\t */\n\tchangeChannelSourceBalance(sourceId, targetId, amount) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\t\tif (!channels || channels.length <= 0) {\n\t\t\t//TODO: throw an error\n\t\t\tconsole.error(`no channel found between \"${sourceId}\" and \"${targetId}\"`);\n\t\t\treturn this;\n\t\t}\n\t\t//TODO: handle error if more than one channel is found.\n\t\tlet channel = channels[0];\n\t\tlet node = this._getNodeById(channel.source.id);\n\t\t//TODO: throw error if node not found;\n\n\t\tif (amount > 0) {\n\t\t\tamount = Math.abs(amount)\n\t\t\tif (node.balance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`node ${sourceId} has not enough balance (${node.balance}) to refund the channel by ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance -= amount;\n\t\t\tchannel.sourceBalance += amount;\n\t\t} else {\n\t\t\tamount = Math.abs(amount)\n\t\t\tif (channel.sourceBalance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`sourceBalance (${sourceId}) is not enough (${channel.sourceBalance}) to remove an amount of ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance += amount;\n\t\t\tchannel.sourceBalance -= amount;\n\t\t}\n\n\t\tthis.nodes.update();\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transfer a amount from the target node banlance to or from the channel.\n\t * @param {String} sourceId - source node id\n\t * @param {String} targetId - target node id\n\t * @param {Integer} amount - positive if moved from node to channel; negative if moved from channel to node.\n\t */\n\tchangeChannelTargetBalance(sourceId, targetId, amount) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\t\tif (!channels || channels.length <= 0) {\n\t\t\t//TODO: throw an error\n\t\t\tconsole.error(`no channel found between \"${sourceId}\" and \"${targetId}\"`);\n\t\t\treturn this;\n\t\t}\n\t\t//TODO: handle error if more than one channel is found.\n\t\tlet channel = channels[0];\n\t\tlet node = this._getNodeById(channel.target.id);\n\t\t//TODO: throw error if node not found;\n\n\t\tif (amount > 0) {\n\t\t\tamount = Math.abs(amount)\n\t\t\tif (node.balance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`node ${targetId} has not enough balance (${node.balance}) to refund the channel by ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance -= amount;\n\t\t\tchannel.targetBalance += amount;\n\t\t} else {\n\t\t\tamount = Math.abs(amount)\n\t\t\tif (channel.targetBalance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`targetBalance (${targetId}) is not enough (${channel.targetBalance}) to remove an amount of ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance += amount;\n\t\t\tchannel.targetBalance -= amount;\n\t\t}\n\n\t\tthis.nodes.update();\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Mark a channel as \"hightlighted\"\n\t * @param {String} sourceId \n\t * @param {String} targetId \n\t * @param {Boolean} state - should the channel be highlighted [true]/false\n\t */\n\thighlightChannel(sourceId, targetId, state) {\n\t\tvar channels = this.getChannels(sourceId, targetId);\n\t\tchannels.forEach((channel) => channel.hightlighted = state ? state : !channel.hightlighted );\n\t\t\n\t\tthis._updateChannels();\n\n\t\t/* make this funktion chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * TODO:\n\t * @param {*} b \n\t */\n\t_positionBeat(b, d) {\n\t\tconst bead = d3.select(b);\n\t\tconst index = d.index;\n\t\tconst state = +bead.attr(\"channel-state\"); // state 0=source, 1=target\n\t\tconst channel = d3.select(bead.node().parentNode.parentNode);\n\t\tconst path = channel.select('.path').node();\n\n\t\tconst channelData = channel.data()[0];\n\t\tconst sourceBalance = channelData.sourceBalance;\n\t\tconst targetBalance = channelData.targetBalance;\n\t\tconst balance = sourceBalance + targetBalance;\n\t\tconst distanceBetweenBeads = this._opt.beads.distance + this._opt.beads.spacing;\n\t\tconst channelPadding = this._opt.beads.firstPosition +  this._opt.beads.spacing;\n\t\n\t\tvar startPosition = channelPadding + (index * distanceBetweenBeads);\t\n\t\tvar endPosition = channelPadding + ((balance-1-index) * distanceBetweenBeads);\n\t\tvar totalDistance = path.getTotalLength() - startPosition - endPosition;\n\n\t\tconst beadPosition = path.getPointAtLength(startPosition + state * totalDistance);\n\t\treturn `translate(${beadPosition.x},${beadPosition.y})`;\n\t}\n\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_ticked() {\n\t\tthis.nodes.render();\n\n\t\tif (this._paths) {\n\t\t\tthis._paths.attr(\"d\", (d) => {\n\t\t\t\t// var count = this._channels.filter((c) => ((d.source.id === d.source.id) && (d.target.id === d.target.id))).length;\n\t\t\t\t// if (count <= 1) {\n\t\t\t\t\treturn `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`;\n\t\t\t\t// } else {\n\t\t\t\t// \tvar dx = d.target.x - d.source.x;\n\t\t\t\t// \tvar dy = d.target.y - d.source.y;\n\t\t\t\t// \tvar dr = Math.sqrt((dx*dx+count) + (dy*dy+count));\n\t\t\t\t// \treturn `M${d.source.x},${d.source.y}A${dr},${dr} 0 0,1 ${d.target.x},${d.target.y}`;\n\t\t\t\t// }\n\t\t\t});\n\t\t}\n\t\tthis.tickedBeads();\n\t}\n\n\t/**\n\t * TODO:\n\t */\n\ttickedBeads() {\n\t\tvar that = this;\n\t\tif (!this.beadElements || this.beadElements.length === 0|| this.beadElements.empty()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.beadElements.attr(\"transform\", function(d) {\n\t\t\treturn that._positionBeat(this, d);\n\t\t});\n\t}\n\t\n\t/**\n\t * TODO\n\t * @param {*} bead \n\t * @param {*} direction \n\t * @param {*} delay \n\t */\n\tanimateBead(bead, direction, delay) {\n\t\tvar that = this;\n\t\tdirection = !!direction;\n\t\tconst select = d3.select(bead)\n\t\treturn select.transition()\n\t\t\t.delay(delay)\t\n\t\t\t//.ease(d3.easeLinear)\n\t\t\t.ease(d3.easeQuadInOut)\n\t\t\t.duration(1000)\n\t\t\t.attrTween(\"channel-state\", function(a) { return function(t) { \n\t\t\t\tthat.tickedBeads();\n\t\t\t\tif (direction) {\n\t\t\t\t\treturn 1-t;\n\t\t\t\t} else {\n\t\t\t\t\treturn t\n\t\t\t\t}\n\t\t\t}});\n\t}\n\n\t/**\n\t * TODO:\n\t * @param {*} sourceId \n\t * @param {*} targetId \n\t * @param {*} beadCount \n\t * @param {*} callback \n\t */\n\tmoveBeads(sourceId, targetId, beadCount, callback) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\n\t\tlet channel = channels[0];\n\t\tif (!channel) {\n\t\t\t//TODO: throw error!?\n\t\t\tconsole.error(\"no channel found!\")\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: get channel with source and target\n\t\tconst channelElement = d3.select(`#${channel.id}`);\n\n\t\tif (channel.source.id == sourceId) {\n\n\t\t\tlet sourceBalance = channel.sourceBalance;\n\t\t\tlet targetBalance = channel.targetBalance;\n\t\t\tvar startIndex = sourceBalance - beadCount;\n\t\t\tvar endIndex = startIndex + beadCount-1;\n\n\t\t\tvar that = this;\n\t\t\tvar transitionCounter = 0;\n\t\t\tchannelElement.selectAll('.bead').each(function(d, index) {\n\t\t\t\tif (index >= startIndex && index <= endIndex) {\n\t\t\t\t\tconst delay = (endIndex-index)*100;\n\t\t\t\t\ttransitionCounter++\n\t\t\t\t\tthat.animateBead(this, d.state, delay).on(\"end\", (ch, a, b) => {\n\t\t\t\t\t\tsourceBalance--;\n\t\t\t\t\t\ttargetBalance++;\n\t\t\t\t\t\td.state = 1;\n\t\n\t\t\t\t\t\tchannel.sourceBalance = sourceBalance;\n\t\t\t\t\t\tchannel.targetBalance = targetBalance;\n\t\t\t\t\t\tthat._updateChannels();\n\n\t\t\t\t\t\tchannelElement\n\t\t\t\t\t\t\t.attr(\"source-balance\", sourceBalance)\n\t\t\t\t\t\t\t.attr(\"target-balance\", targetBalance);\n\t\n\t\t\t\t\t\tif (that._opt.channels.showBalance) {\n\t\t\t\t\t\t\tchannelElement.select('.channel-text-path')\n\t\t\t\t\t\t\t\t.text(`${sourceBalance}:${targetBalance}`);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttransitionCounter--;\n\t\t\t\t\t\tif (transitionCounter <= 0) {\n\t\t\t\t\t\t\treturn callback && callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tlet sourceBalance = channel.sourceBalance;\n\t\t\tlet targetBalance = channel.targetBalance;\n\t\t\tvar startIndex = (sourceBalance + targetBalance) - targetBalance;\n\t\t\tvar endIndex = startIndex + beadCount-1;\n\n\t\t\tvar that = this;\n\t\t\tvar transitionCounter = 0;\n\t\t\tchannelElement.selectAll('.bead').each(function(d, index) {\n\t\t\t\tif (index >= startIndex && index <= endIndex) {\n\t\t\t\t\tconst delay = (index)*100;\n\t\t\t\t\ttransitionCounter++\n\t\t\t\t\tthat.animateBead(this, d.state, delay).on(\"end\", (ch, a, b) => {\n\t\t\t\t\t\tsourceBalance++;\n\t\t\t\t\t\ttargetBalance--;\n\t\t\t\t\t\td.state = 0;\n\n\t\t\t\t\t\tchannel.sourceBalance = sourceBalance;\n\t\t\t\t\t\tchannel.targetBalance = targetBalance;\n\t\t\t\t\t\tthat._updateChannels();\n\t\n\t\t\t\t\t\tchannelElement\n\t\t\t\t\t\t\t.attr(\"source-balance\", sourceBalance)\n\t\t\t\t\t\t\t.attr(\"target-balance\", targetBalance);\n\t\n\t\t\t\t\t\tif (that._opt.channels.showBalance) {\n\t\t\t\t\t\t\tchannelElement.select('.channel-text-path')\n\t\t\t\t\t\t\t\t.text(`${sourceBalance}:${targetBalance}`);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttransitionCounter--;\n\t\t\t\t\t\tif (transitionCounter <= 0) {\n\t\t\t\t\t\t\treturn callback && callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragStart(d) {\n\t\tif (!d3.event.active) {\n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0.1)\n\t\t\t\t.restart();\n\t\t}\n\t\td.fx = d.x;\n\t\td.fy = d.y;\n\t}\n\t\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragged(d) {\n\t\td.fx = d3.event.x; \n\t\td.fy = d3.event.y;\n\t}\n\t\n\t/**\n\t * TODO: \n\t * @private\n\t */\n\t_onDragendEnd(d) {\n\t\tif (!d3.event.active) { \n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0);\n\t\t}\n\t\td.fx = null;\n\t\td.fy = null;\n\t}\n}\n\nexport default Beadnet;"],"names":["root","definition","this","noop","undefinedType","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","replaceLoggingMethods","level","loggerName","i","length","methodFactory","log","debug","defaultMethodFactory","console","undefined","Logger","name","defaultLevel","factory","currentLevel","self","storageKey","getPersistedLevel","storedLevel","window","localStorage","ignore","cookie","document","location","indexOf","encodeURIComponent","exec","slice","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","toUpperCase","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","module","exports","hasOwn","Object","hasOwnProperty","toStr","toString","isArray","arr","Array","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","options","src","copy","copyIsArray","clone","target","deep","defaultOptions","d3","scaleOrdinal","schemeCategory20","sourceBalance","beadCount","Error","getRandomNumber","max","Math","floor","random","getName","names","Nodes","_nodes","_opt","opt","simulation","nodeContainer","id","find","node","_nodeElements","selectAll","data","exit","transition","duration","style","remove","nodeParent","enter","append","attr","balance","nodes","strokeColor","strokeWidth","color","radius","container","backgroundColor","text","d","drag","on","fx","x","fy","y","event","alphaTarget","restart","colorScheme","push","update","forEach","_this","addNode","nodeId","filter","count","from","channels","colorHighlighted","beads","animation","easeExp","distance","spacing","firstPosition","showIndex","querySelector","selector","svg","select","updateSVGSize","chart","channelContainer","_channels","beadElements","_createSimulation","updateSimulationCenter","behaviors","createBehaviors","zoom","addEventListener","onResize","addNodes","removeNode","amount","createRandomNodes","getRandomNode","ch","forceSimulation","force","forceManyBody","strength","forceLink","forceDistance","forceX","forceY","_ticked","width","clientWidth","height","clientHeight","scaleExtent","transform","_onDragStart","_onDragged","_onDragendEnd","centerX","centerY","forceCenter","map","targetBalance","index","_channelElements","channelRoots","merge","source","hightlighted","showBalance","beadsContainer","beadElement","state","_paths","links","channelInfos","channelBalance","nonce","channel","getNodeById","_getUniqueChannelId","_updateChannels","_this2","addChannel","unique","_this3","killCounter","getChannels","sourceId","targetId","_this4","error","_getNodeById","abs","b","bead","parentNode","path","channelData","distanceBetweenBeads","channelPadding","startPosition","endPosition","totalDistance","getTotalLength","beadPosition","getPointAtLength","render","tickedBeads","that","empty","_positionBeat","direction","delay","ease","easeQuadInOut","attrTween","a","t","callback","channelElement","endIndex","startIndex","transitionCounter","each","animateBead","active"],"mappings":"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E,GAAQ2D,EAAOO,EAAMF,EAAOF,SAGT,IAATA,IACjBG,EAAOjE,GAAQ8D,IAQpB,OAAOG,GClFFE,EAAiB,aAETC,GAAGC,aAAaD,GAAGE,yBAEzB,YAEI,UACA,2BACO,cAGX,QACE,SACD,iBACM,cACA,UAGP,eAGG,OACF,wBACW,iBAGL,mBACA,kBAGA,SAGP,QACE,YACE,eACG,cACA,gBAEF,6eCvCAC,EAAeC,kSACiCD,mBAA8BC,kUAFpDC,UCAvC,SAASC,EAAgBC,UACjBC,KAAKC,MAAMD,KAAKE,SAAWH,GCFnC,MAAiB,CAChB,QACA,UACA,SACA,QACA,UACA,OACA,OACA,SACA,MACA,QACA,OACA,QACA,SACA,MACA,OACA,MACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,MACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,SACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,QACA,UACA,QACA,OACA,OACA,QACA,SACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,MACA,SACA,UACA,UACA,QACA,OACA,SACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,MACA,SACA,SACA,QACA,SACA,UACA,UACA,QACA,OACA,OACA,SACA,OACA,MACA,UACA,SACA,QACA,SACA,SACA,MACA,SACA,OACA,YACA,UACA,SACA,QACA,MACA,UACA,QACA,SACA,UACA,SACA,SACA,SACA,OACA,OACA,SACA,MACA,MACA,QACA,SACA,MACA,SACA,QACA,SACA,UACA,QACA,QACA,UACA,MACA,SACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,QACA,SACA,QACA,OACA,QACA,MACA,SACA,UACA,SACA,QA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"}